basePath: /api/v2
definitions:
  consts.Language:
    enum:
    - en
    - bn
    type: string
    x-enum-varnames:
    - English
    - Bangla
  database.Campaign:
    properties:
      createdAt:
        description: read only
        type: string
      createdBy:
        type: string
      description:
        type: string
      endDate:
        type: string
      id:
        type: string
      image:
        type: string
      language:
        $ref: '#/definitions/consts.Language'
      name:
        type: string
      rules:
        type: string
      startDate:
        type: string
    type: object
  database.CampaignRound:
    properties:
      campaignId:
        type: string
      createdAt:
        type: string
      createdById:
        type: string
      dependsOnRoundId:
        type: string
      description:
        type: string
      endDate:
        type: string
      id:
        type: string
      isOpen:
        type: boolean
      isPublic:
        type: boolean
      maximumSubmissionOfSameImage:
        type: integer
      minimumTotalImageSize:
        type: integer
      name:
        type: string
      serial:
        type: integer
      startDate:
        type: string
    type: object
  database.CampaignRoundWritable:
    properties:
      dependsOnRoundId:
        type: string
      description:
        type: string
      endDate:
        type: string
      isOpen:
        type: boolean
      isPublic:
        type: boolean
      maximumSubmissionOfSameImage:
        type: integer
      minimumTotalImageSize:
        type: integer
      name:
        type: string
      serial:
        type: integer
      startDate:
        type: string
    type: object
  routes.ResponseList-database_Campaign:
    properties:
      data:
        items:
          $ref: '#/definitions/database.Campaign'
        type: array
    type: object
  routes.ResponseList-database_CampaignRound:
    properties:
      data:
        items:
          $ref: '#/definitions/database.CampaignRound'
        type: array
    type: object
  services.CampaignCreateRequest:
    properties:
      description:
        type: string
      endDate:
        type: string
      image:
        type: string
      jury:
        items:
          type: integer
        type: array
      language:
        $ref: '#/definitions/consts.Language'
      name:
        type: string
      rules:
        type: string
      startDate:
        type: string
    type: object
  services.CampaignUpdateRequest:
    properties:
      campaignId:
        type: string
      description:
        type: string
      endDate:
        type: string
      image:
        type: string
      jury:
        items:
          type: integer
        type: array
      language:
        $ref: '#/definitions/consts.Language'
      name:
        type: string
      rules:
        type: string
      startDate:
        type: string
    type: object
  services.RoundRequest:
    properties:
      campaignId:
        type: string
      rounds:
        items:
          $ref: '#/definitions/database.CampaignRoundWritable'
        type: array
    type: object
host: localhost:8080
info:
  contact:
    email: nokibsarkar@gmail.com
    name: Nokib Sarkar
    url: https://github.com/nokibsarkar
  description: This is the API documentation for Campwiz
  license:
    name: GPL-3.0
    url: https://www.gnu.org/licenses/gpl-3.0.html
  title: Campwiz API
  version: "1"
paths:
  /campaign/:
    get:
      description: get all campaigns
      parameters:
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: ids
        type: array
      - in: query
        name: limit
        type: integer
      - in: query
        name: nextToken
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.ResponseList-database_Campaign'
      summary: List all campaigns
      tags:
      - Campaign
    post:
      description: Create a new campaign
      parameters:
      - description: The campaign request
        in: body
        name: campaignRequest
        required: true
        schema:
          $ref: '#/definitions/services.CampaignCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.Campaign'
      summary: Create a new campaign
      tags:
      - Campaign
  /campaign/{id}:
    post:
      description: Update a campaign
      parameters:
      - description: The campaign ID
        in: path
        name: id
        required: true
        type: string
      - description: The campaign request
        in: body
        name: campaignRequest
        required: true
        schema:
          $ref: '#/definitions/services.CampaignUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.Campaign'
      summary: Update a campaign
      tags:
      - Campaign
  /round/:
    get:
      description: get all rounds
      parameters:
      - in: query
        name: campaignId
        type: string
      - in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.ResponseList-database_CampaignRound'
      summary: List all rounds
      tags:
      - CampaignRound
  /round/bulk-add:
    post:
      description: Add multiple rounds to a campaign
      parameters:
      - description: The round request
        in: body
        name: roundRequest
        required: true
        schema:
          $ref: '#/definitions/services.RoundRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.ResponseList-database_CampaignRound'
      summary: Add multiple rounds to a campaign
      tags:
      - CampaignRound
produces:
- application/json
schemes:
- http
- https
swagger: "2.0"
